#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –¥–ª—è Replit
"""

import asyncio
import logging
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent))

from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    logger.error("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    sys.exit(1)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# URL Replit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è)
REPL_SLUG = os.getenv('REPL_SLUG', 'daggerheart-bot')
REPL_OWNER = os.getenv('REPL_OWNER', 'username')
REPLIT_URL = f"https://{REPL_SLUG}.{REPL_OWNER}.repl.co"
WEBAPP_URL = f"{REPLIT_URL}/webapp"


@dp.message(Command("start"))
async def start_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_name = message.from_user.first_name or "–ò—Å–∫–∞—Ç–µ–ª—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π"

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App
    webapp_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üé≤ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ Daggerheart",
                    web_app=WebAppInfo(url=WEBAPP_URL)
                )
            ]
        ]
    )

    welcome_text = f"""
üó°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä Daggerheart, {user_name}!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ–∫—É–Ω—É—Ç—å—Å—è –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –≤ –º–∏—Ä–µ, –≥–¥–µ –º–∞–≥–∏—è –ø–µ—Ä–µ–ø–ª–µ—Ç–∞–µ—Ç—Å—è —Å –æ–ø–∞—Å–Ω–æ—Å—Ç—è–º–∏, –∞ —Ç–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å—É–¥—å–±—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.

‚ú® **–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç:**
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è —Å –ò–ò –ú–∞—Å—Ç–µ—Ä–æ–º
‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–≤–æ–π–Ω—ã—Ö –∫–æ—Å—Ç–µ–π –∏ Hope/Fear
‚Ä¢ –£–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –∏ —Å—Ä–∞–∂–µ–Ω–∏—è

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!
    """

    await message.answer(
        text=welcome_text,
        reply_markup=webapp_keyboard
    )


@dp.message(Command("help"))
async def help_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üéØ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**

/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ

üé≤ **–ö–∞–∫ –∏–≥—Ä–∞—Ç—å:**
1. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ Daggerheart"
2. –°–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
3. –°–ª–µ–¥—É–π —É–∫–∞–∑–∞–Ω–∏—è–º –ò–ò –ú–∞—Å—Ç–µ—Ä–∞
4. –ü—Ä–∏–Ω–∏–º–∞–π —Ä–µ—à–µ–Ω–∏—è –∏ –∫–∏–¥–∞–π –∫–æ—Å—Ç–∏!

–£–¥–∞—á–∏ –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö! ‚öîÔ∏è
    """
    await message.answer(help_text)


@dp.message(Command("info"))
async def info_handler(message: types.Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ"""
    bot_info = await bot.get_me()
    info_text = f"""
‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:**

ü§ñ **–ë–æ—Ç:** @{bot_info.username}
üåê **API:** {REPLIT_URL}
üì± **WebApp:** {WEBAPP_URL}
üîó **GitHub:** https://github.com/PhilipKindredDick/daggerheart-bot

üõ†Ô∏è **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ Python + aiogram
‚Ä¢ FastAPI
‚Ä¢ Telegram Mini Apps
‚Ä¢ Replit hosting

–í–µ—Ä—Å–∏—è: 1.0.0 (Replit)
–•–æ—Å—Ç: {REPL_SLUG}.{REPL_OWNER}.repl.co
    """
    await message.answer(info_text)


@dp.message()
async def echo_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await message.answer(
        "üé≤ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Mini App –¥–ª—è –∏–≥—Ä—ã!\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help, /info"
    )


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Daggerheart –±–æ—Ç–∞ (Replit)...")
    logger.info(f"üì± WebApp URL: {WEBAPP_URL}")
    logger.info(f"üåê Replit URL: {REPLIT_URL}")

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏, –ø–æ–∫–∞ –±–æ—Ç –±—ã–ª –æ—Ñ—Ñ–ª–∞–π–Ω
    await bot.delete_webhook(drop_pending_updates=True)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())